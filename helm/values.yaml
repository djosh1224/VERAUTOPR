# Default values for config-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global Values
image:
  pullPolicy: Always
  repository: mcd.jfrog.io/rcc1-docker-dev-local/rtm-topology-api
  tag:

# Backend API

env: us-dev
activeProfile: dev
imageCredentials:
  registry: mcd.jfrog.io
  username: ""
  password: ""
replicaCount: 1
resources:
  limits:
    cpu: 500m
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 1Gi
nodeSelector: {}
service:
  type: NodePort
  port: 8080
tolerations:
  - key: "nodeType"
    operator: "Equal"
    value: "generalPurpose"
    effect: "PreferNoSchedule"
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 60
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 60
affinity: { }
logLevel: debug
port: 8080
serviceAccountName: "rtm-us-dev-topology-api-serviceaccount"
market: ""
namespace: "eks-namespace"
#customMetrics:
  #path: /config/actuator/prometheus
  #enabled: "true"
  #port: "8080"
# New Relic
newRelic:
  licensekey: ""
  appname: us-rcc1-dev-topology-api
  apikey: "new-relic-insights-key"
  account: 3632437

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  numOfRequestsPerContainer: 1000

ingress:
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 8080}]'
    alb.ingress.kubernetes.io/healthcheck-path: /top/v1/HealthCheck/health
  path: /top/

health:
  path: /top/v1/HealthCheck/health
  

